name: Clojure CI

on: [push]

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  checks: write
  id-token: write

jobs:
  build:

    runs-on: ubuntu-latest
    env:
      JAVA_OPTS: "-Dio.netty.tryUnsafe=false"
      FDB_CLUSTER_FILE: "./docker/fdb.cluster"

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4.0.3
        with:
          node-version: 19.3.0

      - name: Install coverage tools
        run: |
          sudo apt install lcov -y
          mkdir -p coverage

      # required for the native fdb lib
      - name: Install foundationdb
        uses: foundationdb-rs/foundationdb-actions-install@v.2.2.0
        with:
          version: 7.1.31

      - name: Stop foundation
        run: sudo systemctl stop foundationdb.service

      - name: Prepare java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Install clojure tools
        uses: DeLaGuardo/setup-clojure@12.5
        with:
          # Install just one or all simultaneously
          # The value must indicate a particular version of the tool, or use 'latest'
          # to always provision the latest version
          cli: 1.11.3.1463             # Clojure CLI based on tools.deps
          clj-kondo: 2024.08.01        # Clj-kondo
          cljstyle: 0.16.626           # cljstyle

      - name: Cache clojure/node dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.m2/repository
            ~/node_modules
          # List all files containing dependencies:
          key: cljdeps-${{ hashFiles('deps.edn', 'package.json') }}
          restore-keys: cljdeps-${{ hashFiles('deps.edn', 'package.json') }}

      - name: Install node dependencies
        if: steps.cache-node-deps.outputs.cache-hit != 'true'
        run: npm install

      - name: Install clj dependencies
        run: clojure -A:dev:doc:cljs:fdb:jdbc -Stree
      #- name: Compile cljs
      #  run: npx shadow-cljs compile dev
      - name: Compile docs
        run: npx shadow-cljs compile doc

      - name: Lint
        run: clj-kondo --parallel --lint {src,test}

      - uses: adambirds/docker-compose-action@v1.4.0
        with:
          services: |
            postgresql
            foundation
          down-flags: "--volumes"

      - name: Docker status
        run: |
          docker compose ps
          docker compose logs postgresql
          docker compose logs foundation

      - name: Test cljs
        env:
          CLOVERAGE_OUTPUT: target/coverage-cljs
        run: bin/kaocha unit-cljs

      - name: Test clj
        env:
          CLOVERAGE_OUTPUT: target/coverage-clj
        run: bin/kaocha unit

      - name: Coverage report
        run: |
          lcov --add-tracefile target/coverage-clj/lcov.info  --add-tracefile target/coverage-cljs/lcov.info -o coverage/lcov.merged.info
          genhtml coverage/lcov.merged.info -o coverage

      - name: Report code coverage
        uses: dethereum/github-actions-report-lcov@v1.0.0
        with:
          coverage-files: coverage/lcov.*.info
          #minimum-coverage: 90
          artifact-name: code-coverage-report
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Test Report
        uses: mikepenz/action-junit-report@v4
        if: success() || failure()
        with:
          include_passed: true
          report_paths: '**/target/test-reports/report.xml'


