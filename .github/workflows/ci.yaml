name: Continuous Integration

on: [push]
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  earthly:
    name: Earthly ci
    runs-on: ubuntu-latest
    steps:
      - uses: earthly/actions-setup@v1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          version: "latest" # or pin to an specific version, e.g. "0.8.1"
      - uses: actions/checkout@v4
      - name: Docker login # to avoid dockerhub rate-limiting
        run: docker login --username "${{ secrets.DOCKERHUB_USERNAME }}" --password "${{ secrets.DOCKERHUB_PASSWORD }}"
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Check earthly version
        run: earthly --version
      - name: Run tests with earthly
        run: earthly -P +test --ci --remote-cache=ghcr.io/mping/intemporal:ci-cache
      - name: Setup LCOV
        uses: hrishikesh-kadam/setup-lcov@v1
      - uses: kcjpop/coverage-comments@v2.2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          coverage-file: './coverage/lcov.merged.info'

  clojure:
    if: false
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Cache Clojure Dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.m2
            ~/.gitlibs
          key: cache-${{ hashFiles('**/deps.edn') }}
          restore-keys: clojure-deps-

      - name: Prepare java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Install clojure tools
        uses: DeLaGuardo/setup-clojure@9.5
        with:
          cli: 1.11.1.1165
          clj-kondo: 2025.07.28

      - name: Setup Nodejs
        uses: actions/setup-node@v5
        with:
          # Version Spec of the version to use in SemVer notation.
          # It also admits such aliases as lts/*, latest, nightly and canary builds
          # Examples: 12.x, 10.15.1, >=10.15.0, lts/Hydrogen, 16-nightly, latest, node
          node-version: '24.7.0'

      - name: Setup FDB
        run:
          curl -L "https://github.com/apple/foundationdb/releases/download/7.1.31/foundationdb-clients_7.1.31-1_amd64.deb" --output /tmp/foundationdb-clients_7.1.31-1_amd64.deb --fail;
          sudo dpkg -i /tmp/foundationdb-clients_7.1.31-1_amd64.deb;
          sudo rm -f /tmp/foundationdb-clients_7.1.31-1_amd64.deb;
          sudo curl --fail -L "https://github.com/apple/foundationdb/releases/download/7.1.31/libfdb_c.x86_64.so" --output "/usr/lib/libfdb_c.7.1.31.x86_64.so";

      - name: Setup docker compose
        id: compose
        uses: hoverkraft-tech/compose-action@v2.2.0
        with:
          compose-file: |
            docker-compose.yaml
          up-flags: "--no-build -d --pull=missing --quiet-pull"
          down-flags: "--volumes"
          compose-version: "2.36.0"

      - name: Lint with clj-kondo
        run: clj-kondo --lint deps.edn src resources test

      - name: Run tests
        if: false
        run: ./bin/kaocha test

      - name: Run clj tests
        if: false
        #run: ./bin/kaocha test-cljs
        run: |
          npx shadow-cljs compile node

      # coverage section
      - name: Install lcov
        run: |
          sudo apt install -y lcov
      - name: Coverage
        run: |
          bin/run-coverage

      - name: Test Reports
        uses: mikepenz/action-junit-report@v5
        if: failure()
        with:
          #check_name: "report for ${{ matrix.module }}"
          include_passed: true
          report_paths: 'target/test-reports/*.xml'
