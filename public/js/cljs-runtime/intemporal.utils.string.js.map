{"version":3,"sources":["intemporal/utils/string.cljc"],"mappings":";AAIA,AAAA,8BAAA,sCAAAA,pEAAMM;AAAN,AAAA,IAAAL,qBAAA;AAAA,AAAA,IAAAC,0BAAA,AAAA;AAAA,AAAA,IAAAC,wBAAA;;AAAA,AAAA,GAAA,CAAAA,wBAAAD;AAAA,AAAA,AAAAD,wBAAA,CAAA,UAAAE;;AAAA,eAAA,CAAAA,wBAAA;;;;AAAA;;;;AAAA,IAAAC,uBAAA,EAAA,CAAA,MAAA,AAAAH,4BAAA,AAAA,KAAAI,qBAAA,AAAAJ,yBAAA,KAAA,IAAA,OAAA;AAAA,AAAA,OAAAK,iEAAAF;;;AAAA,AAAA,CAAA,mEAAA,nEAAME,8EAAOI;AAAb,AAEW,OAACC,8CAAMC,mBAAeF;;;AAFjC,CAAA,sDAAA,tDAAMJ;;AAAN;AAAA,CAAA,gDAAA,WAAAC,3DAAMD;AAAN,AAAA,IAAAE,qBAAA;AAAA,AAAA,OAAAA,wDAAA,AAAAC,cAAAF;;;AAAA","names":["var_args","args__5775__auto__","len__5769__auto__","i__5770__auto__","argseq__5776__auto__","cljs.core/IndexedSeq","intemporal.utils.string/fmt","seq36738","self__5755__auto__","cljs.core/seq","args","cljs.core.apply","goog.string/format"],"sourcesContent":["(ns intemporal.utils.string\n  #?(:cljs (:require [goog.string :as gstring]\n                     [goog.string.format :as gformat])))\n\n(defn fmt [& args]\n  #?(:clj (apply format args)\n     :cljs (apply gstring/format args)))\n\n"]}