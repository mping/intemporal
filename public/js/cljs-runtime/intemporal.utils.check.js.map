{"version":3,"sources":["intemporal/utils/check.cljc"],"mappings":"","names":[],"sourcesContent":["(ns intemporal.utils.check\n  (:require [intemporal.error :as error]\n            [intemporal.utils.string :refer [fmt]])\n  #?(:cljs (:require-macros [intemporal.utils.check :refer [check]])))\n\n\n#?(:clj\n   (defmacro check [cond message & args]\n     `(when-not ~cond\n        (throw (error/workflow-error (fmt ~message ~@args))))))"]}